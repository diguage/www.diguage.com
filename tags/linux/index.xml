<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on "地瓜哥"博客网</title><link>https://www.diguage.com/tags/linux/</link><description>Recent content in Linux on "地瓜哥"博客网</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 23 Jul 2025 21:36:25 +0800</lastBuildDate><atom:link href="https://www.diguage.com/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>玩转 Kubernetes（一）：离线安装 Kubernetes 2</title><link>https://www.diguage.com/post/play-with-kubernetes-01-install-kubernetes-offline-2/</link><pubDate>Mon, 10 Feb 2025 21:46:32 +0800</pubDate><guid>https://www.diguage.com/post/play-with-kubernetes-01-install-kubernetes-offline-2/</guid><description>&lt;div class="paragraph">
&lt;p>在 &lt;a href="https://www.diguage.com/post/play-with-kubernetes-01-install-kubernetes-offline/" target="_blank" rel="noopener">玩转 Kubernetes（一）：离线安装 Kubernetes 1&lt;/a> 中，D瓜哥基于 Kubespray 进行魔改的脚本搭建起来容器镜像仓库。但是，每次都魔改着实麻烦，所以，探索 Kubespray 原生支持才是更为委托的长久之计。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>经过多次探索，终于，可以几乎无需魔改就可以利用 Kubespray 原生支持进行 Kubernetes 的离线安装。&lt;/p>
&lt;/div>
&lt;div class="admonitionblock tip">
&lt;table>
&lt;tbody>&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-tip" title="Tip">&lt;/i>
&lt;/td>
&lt;td class="content">
以下是在 Mac 上的操作，在 Linux 等系统上操作类似。
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_按照_python_依赖">按照 Python 依赖&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>在 Mac 的虚拟机离线安装 Kubernetes，使用 Mac 当做容器镜像服务器和二进制安装文件下载服务器是一个非常好的选择。为此，需要在完成一些基本的操作。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>由于运行 Kubespray，需要一个 Python 环境以及相关依赖，所以，就需要先安装相关依赖。&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># 配置 Python 镜像&lt;/span>
pip config &lt;span class="nb">set &lt;/span>global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

&lt;span class="c"># 进入 Kubespray 的上层目录&lt;/span>
&lt;span class="nb">cd&lt;/span> /PATH/TO/kubespray/..

&lt;span class="c"># 按照 Python 相关依赖&lt;/span>
&lt;span class="nv">VENVDIR&lt;/span>&lt;span class="o">=&lt;/span>kubespray-venv
&lt;span class="nv">KUBESPRAYDIR&lt;/span>&lt;span class="o">=&lt;/span>kubespray
python3 &lt;span class="nt">-m&lt;/span> venv &lt;span class="nv">$VENVDIR&lt;/span>
&lt;span class="nb">source&lt;/span> &lt;span class="nv">$VENVDIR&lt;/span>/bin/activate
&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$KUBESPRAYDIR&lt;/span>
pip &lt;span class="nb">install&lt;/span> &lt;span class="nt">-U&lt;/span> &lt;span class="nt">-r&lt;/span> requirements.txt&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_生成镜像列表及二进制文件列表">生成镜像列表及二进制文件列表&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>安装完相关依赖，就需要生成相关文件列表：&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># 生成镜像列表以及相关二进制文件列表&lt;/span>
&lt;span class="nb">cd&lt;/span> /PATH/TO/kubespray/contrib/offline

./generate_list.sh&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="admonitionblock tip">
&lt;table>
&lt;tbody>&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-tip" title="Tip">&lt;/i>
&lt;/td>
&lt;td class="content">
注意：大多数情况下，我们的安装目标是 Linux。所以，建议这步操作在 Linux 上完成，这样得到的下载文件列表是 Linux 格式的。在 Mac 上完成，那么部分文件的格式就是 Mac 的，不能用于 Linux 的安装。
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
&lt;/div></description></item><item><title>玩转 Kubernetes（一）：离线安装 Kubernetes 1</title><link>https://www.diguage.com/post/play-with-kubernetes-01-install-kubernetes-offline/</link><pubDate>Tue, 14 Jan 2025 16:13:19 +0800</pubDate><guid>https://www.diguage.com/post/play-with-kubernetes-01-install-kubernetes-offline/</guid><description>&lt;div class="paragraph">
&lt;p>在 &lt;a href="https://www.diguage.com/post/building-a-develop-environment-based-on-docker-3/" target="_blank" rel="noopener">基于 Docker 搭建开发环境（三）：链路追踪&lt;/a> 等几篇文章中，D瓜哥分享了如何使用 Docker Compose 在本地搭建起来一套应用可观测性环境。感觉还不够好玩，毕竟正在在企业中，Kubernetes 已经是绝对的主流。要玩就玩最具挑战性的东西，玩最符合企业所需的技能和工具。所以，打算将上面那套简易玩具，按照企业级的要求，搬到 Kubernetes 上去。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如果想玩 Kubernetes，首先面临的一个问题就是 Kubernetes 集群的搭建。本来是一个非常简单的事情，但是由于众所周知的原因，变得非常具有挑战性。经过各种探索和多次试验，发现一种“离线”安装方式，感觉是一个不错的方式。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>本方法是基于 &lt;a href="https://kubespray.io/#/" target="_blank" rel="noopener">Kubespray&lt;/a> 的一种安装办法，Kubespray 是由 Kubernetes SIG 小组来负责维护的一整套安装方式。既可以支持在裸机环境上安装，也支持云上环境安装。而且，只需要简单几行可以复制粘贴的命令，即可完成安装工作。非常适合入门玩耍使用。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>本安装方法所需的软件，D瓜哥都已经上传到 GitHub，如果需要下载，请移步： &lt;a href="https://github.com/diguage/k8s-packages/releases/tag/2.26.0" target="_blank" rel="noopener">Kubespray-2.26.0 安装包大全&lt;/a>。&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_搭建服务器集群">搭建服务器集群&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>这里推荐使用 &lt;a href="https://www.vagrantup.com/" target="_blank" rel="noopener">Vagrant&lt;/a> 搭建集群。搭配 &lt;a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox&lt;/a>，只需要一个配置文件，就可以轻轻松松搭建一个 Linux 服务器集群。搭建集群的配置文件 &lt;code>Vagrantfile&lt;/code> 如下：&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="ruby">&lt;span class="c1"># -*- mode: ruby -*-&lt;/span>
&lt;span class="c1"># vi: set ft=ruby :&lt;/span>
&lt;span class="c1"># @author D瓜哥 · &lt;a href="https://www.diguage.com/" target="_blank">https://www.diguage.com/&lt;/a>&lt;/span>

&lt;span class="c1"># All Vagrant configuration is done below. The &amp;#34;2&amp;#34; in Vagrant.configure&lt;/span>
&lt;span class="c1"># configures the configuration version (we support older styles for&lt;/span>
&lt;span class="c1"># backwards compatibility). Please don&amp;#39;t change it unless you know what&lt;/span>
&lt;span class="c1"># you&amp;#39;re doing.&lt;/span>

&lt;span class="no">Vagrant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">configure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">|&lt;/span>
 &lt;span class="c1"># The most common configuration options are documented and commented below.&lt;/span>
 &lt;span class="c1"># For a complete reference, please see the online documentation at&lt;/span>
 &lt;span class="c1"># &lt;a href="https://docs.vagrantup.com" target="_blank">https://docs.vagrantup.com&lt;/a>&lt;/span>

 &lt;span class="c1"># 三节点集群&lt;/span>
 &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">|&lt;/span>
 &lt;span class="n">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">define&lt;/span> &lt;span class="s2">&amp;#34;node&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">|&lt;/span>

 &lt;span class="c1"># Every Vagrant development environment requires a box. You can search for&lt;/span>
 &lt;span class="c1"># boxes at &lt;a href="https://vagrantcloud.com/search" target="_blank">https://vagrantcloud.com/search&lt;/a>&lt;/span>
 &lt;span class="c1"># &lt;a href="https://portal.cloud.hashicorp.com/vagrant/discover/bento/ubuntu-24.04" target="_blank">https://portal.cloud.hashicorp.com/vagrant/discover/bento/ubuntu-24.04&lt;/a>&lt;/span>
 &lt;span class="c1"># &lt;a href="https://portal.cloud.hashicorp.com/vagrant/discover/alvistack/ubuntu-24.04" target="_blank">https://portal.cloud.hashicorp.com/vagrant/discover/alvistack/ubuntu-24.04&lt;/a>&lt;/span>
 &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">box&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;alvistack/ubuntu-24.04&amp;#34;&lt;/span>
 &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">box_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;20250210.0.0&amp;#34;&lt;/span>

 &lt;span class="c1"># 设置虚拟机的主机名&lt;/span>
 &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">hostname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;node&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>

 &lt;span class="n">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">boot_timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">600&lt;/span>

 &lt;span class="c1"># Disable automatic box update checking. If you disable this, then&lt;/span>
 &lt;span class="c1"># boxes will only be checked for updates when the user runs&lt;/span>
 &lt;span class="c1"># `vagrant box outdated`. This is not recommended.&lt;/span>
 &lt;span class="c1"># config.vm.box_check_update = false&lt;/span>

 &lt;span class="c1"># Create a forwarded port mapping which allows access to a specific port&lt;/span>
 &lt;span class="c1"># within the machine from a port on the host machine. In the example below,&lt;/span>
 &lt;span class="c1"># accessing &amp;#34;localhost:8080&amp;#34; will access port 80 on the guest machine.&lt;/span>
 &lt;span class="c1"># NOTE: This will enable public access to the opened port&lt;/span>
 &lt;span class="c1"># config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 80, host: 8080&lt;/span>

 &lt;span class="c1"># Create a forwarded port mapping which allows access to a specific port&lt;/span>
 &lt;span class="c1"># within the machine from a port on the host machine and only allow access&lt;/span>
 &lt;span class="c1"># via 127.0.0.1 to disable public access&lt;/span>
 &lt;span class="c1"># config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 80, host: 8080, host_ip: &amp;#34;127.0.0.1&amp;#34;&lt;/span>

 &lt;span class="c1"># Create a private network, which allows host-only access to the machine&lt;/span>
 &lt;span class="c1"># using a specific IP.&lt;/span>
 &lt;span class="c1"># 设置虚拟机的IP&lt;/span>
 &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">network&lt;/span> &lt;span class="s2">&amp;#34;private_network&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">ip: &lt;/span>&lt;span class="s2">&amp;#34;10.0.2.&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">auto_config: &lt;/span>&lt;span class="kp">true&lt;/span>

 &lt;span class="c1"># Create a public network, which generally matched to bridged network.&lt;/span>
 &lt;span class="c1"># Bridged networks make the machine appear as another physical device on&lt;/span>
 &lt;span class="c1"># your network.&lt;/span>
 &lt;span class="c1"># config.vm.network &amp;#34;public_network&amp;#34;&lt;/span>

 &lt;span class="c1"># Share an additional folder to the guest VM. The first argument is&lt;/span>
 &lt;span class="c1"># the path on the host to the actual folder. The second argument is&lt;/span>
 &lt;span class="c1"># the path on the guest to mount the folder. And the optional third&lt;/span>
 &lt;span class="c1"># argument is a set of non-required options.&lt;/span>
 &lt;span class="c1"># 设置主机与虚拟机的共享目录，根据需要开启&lt;/span>
 &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">synced_folder&lt;/span> &lt;span class="s2">&amp;#34;/path/to/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/data&amp;#34;&lt;/span>


 &lt;span class="c1"># Disable the default share of the current code directory. Doing this&lt;/span>
 &lt;span class="c1"># provides improved isolation between the vagrant box and your host&lt;/span>
 &lt;span class="c1"># by making sure your Vagrantfile isn&amp;#39;t accessible to the vagrant box.&lt;/span>
 &lt;span class="c1"># If you use this you may want to enable additional shared subfolders as&lt;/span>
 &lt;span class="c1"># shown above.&lt;/span>
 &lt;span class="c1"># config.vm.synced_folder &amp;#34;.&amp;#34;, &amp;#34;/vagrant&amp;#34;, disabled: true&lt;/span>

 &lt;span class="c1"># Provider-specific configuration so you can fine-tune various&lt;/span>
 &lt;span class="c1"># backing providers for Vagrant. These expose provider-specific options.&lt;/span>
 &lt;span class="c1"># Example for VirtualBox:&lt;/span>

 &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">provider&lt;/span> &lt;span class="s2">&amp;#34;virtualbox&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">vb&lt;/span>&lt;span class="o">|&lt;/span>
 &lt;span class="c1"># 设置虚拟机的名称&lt;/span>
 &lt;span class="c1"># vb.name = &amp;#34;node#{i}&amp;#34;&lt;/span>

 &lt;span class="c1"># if node.vm.hostname == &amp;#34;node1&amp;#34;&lt;/span>
 &lt;span class="c1"># # Display the VirtualBox GUI when booting the machine&lt;/span>
 &lt;span class="c1"># vb.gui = true&lt;/span>
 &lt;span class="c1"># end&lt;/span>

 &lt;span class="c1"># Customize the amount of memory on the VM:&lt;/span>
 &lt;span class="n">vb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">memory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;6144&amp;#34;&lt;/span>

 &lt;span class="c1"># 设置虚拟机的CPU个数&lt;/span>
 &lt;span class="n">vb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">cpus&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
 &lt;span class="k">end&lt;/span>

 &lt;span class="c1"># View the documentation for the provider you are using for more&lt;/span>
 &lt;span class="c1"># information on available options.&lt;/span>

 &lt;span class="c1"># Enable provisioning with a shell script. Additional provisioners such as&lt;/span>
 &lt;span class="c1"># Ansible, Chef, Docker, Puppet and Salt are also available. Please see the&lt;/span>
 &lt;span class="c1"># documentation for more information about their specific syntax and use.&lt;/span>
 &lt;span class="c1"># config.vm.provision &amp;#34;shell&amp;#34;, inline: &amp;lt;&amp;lt;-SHELL&lt;/span>
 &lt;span class="c1"># sudo yum makecache --refresh&lt;/span>
 &lt;span class="c1"># sudo yum install -y tcpdump&lt;/span>
 &lt;span class="c1"># sudo yum install -y nc&lt;/span>
 &lt;span class="c1"># sudo yum install -y net-tools&lt;/span>
 &lt;span class="c1"># SHELL&lt;/span>
 &lt;span class="k">end&lt;/span>
 &lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>killercoda CKA：Troubleshooting - 3</title><link>https://www.diguage.com/post/killercoda-cka-troubleshooting-3/</link><pubDate>Thu, 26 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-troubleshooting-3/</guid><description>&lt;div class="sect1">
&lt;h2 id="_troubleshooting_service_account_role_role_binding_issue">1. Troubleshooting - Service account, role, role binding Issue&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/sa-cr-crb-issue" target="_blank" rel="noopener">Troubleshooting - Service account, role, role binding Issue&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>You have a service account named &lt;code>dev-sa&lt;/code>, a Role named &lt;code>dev-role-cka&lt;/code>, and a RoleBinding named &lt;code>dev-role-binding-cka&lt;/code>. we are trying to &lt;code>create&lt;/code> &lt;code>list&lt;/code> and &lt;code>get&lt;/code> the &lt;code>pods&lt;/code> and &lt;code>services&lt;/code>. However, using &lt;code>dev-sa&lt;/code> service account is not able to perform these operations. fix this issue.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl get serviceaccounts dev-sa &lt;span class="nt">-o&lt;/span> yaml
apiVersion: v1
kind: ServiceAccount
metadata:
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-22T09:48:06Z&amp;#34;&lt;/span>
 name: dev-sa
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2270&amp;#34;&lt;/span>
 uid: 48b68f34-8c19-4477-9631-4f368f6ecc66

&lt;span class="nv">$ &lt;/span>kubectl get role dev-role-cka
NAME CREATED AT
dev-role-cka 2025-01-22T09:48:06Z

&lt;span class="nv">$ &lt;/span>kubectl get role dev-role-cka &lt;span class="nt">-o&lt;/span> yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-22T09:48:06Z&amp;#34;&lt;/span>
 name: dev-role-cka
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2271&amp;#34;&lt;/span>
 uid: 7a011481-8edd-4417-a1b8-8d15290d3e9f
rules:
- apiGroups:
 - &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
 resources:
 - secrets
 verbs:
 - get

&lt;span class="nv">$ &lt;/span>kubectl get rolebindings dev-role-binding-cka &lt;span class="nt">-o&lt;/span> yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-22T09:48:07Z&amp;#34;&lt;/span>
 name: dev-role-binding-cka
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2272&amp;#34;&lt;/span>
 uid: 888af489-86b6-4d38-a723-a8ff13656d2b
roleRef:
 apiGroup: rbac.authorization.k8s.io
 kind: Role
 name: dev-role-cka
subjects:
- kind: ServiceAccount
 name: dev-sa
 namespace: default

&lt;span class="c"># 将 Role 删掉，重建即可&lt;/span>
&lt;span class="nv">$ &lt;/span>kubectl delete role dev-role-cka &lt;span class="nt">--force&lt;/span> &lt;span class="nt">--grace-period&lt;/span> 0
Warning: Immediate deletion does not &lt;span class="nb">wait &lt;/span>&lt;span class="k">for &lt;/span>confirmation that the running resource has been terminated. The resource may &lt;span class="k">continue &lt;/span>to run on the cluster indefinitely.
role.rbac.authorization.k8s.io &lt;span class="s2">&amp;#34;dev-role-cka&amp;#34;&lt;/span> force deleted

&lt;span class="nv">$ &lt;/span>kubectl create role dev-role-cka &lt;span class="nt">--resource&lt;/span>&lt;span class="o">=&lt;/span>pods,services &lt;span class="nt">--verb&lt;/span>&lt;span class="o">=&lt;/span>create,list,get
role.rbac.authorization.k8s.io/dev-role-cka created

&lt;span class="nv">$ &lt;/span>kubectl get role dev-role-cka &lt;span class="nt">-o&lt;/span> yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-22T09:49:46Z&amp;#34;&lt;/span>
 name: dev-role-cka
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2414&amp;#34;&lt;/span>
 uid: b3d7fc62-f029-4f4b-88a5-99ee9840af05
rules:
- apiGroups:
 - &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
 resources:
 - pods
 - services
 verbs:
 - create
 - list
 - get&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>killercoda CKA：Troubleshooting - 2</title><link>https://www.diguage.com/post/killercoda-cka-troubleshooting-2/</link><pubDate>Tue, 24 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-troubleshooting-2/</guid><description>&lt;div class="sect1">
&lt;h2 id="_troubleshooting_persistent_volume_persistent_volume_claim_issue">1. Troubleshooting - Persistent Volume, Persistent Volume Claim - Issue&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/pv-pvc-issue" target="_blank" rel="noopener">Troubleshooting - Persistent Volume, Persistent Volume Claim - Issue&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>&lt;code>my-pvc&lt;/code> Persistent Volume Claim is stuck in a Pending state, fix this issue, make sure it is in Bound state&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl get pvc my-pvc &lt;span class="nt">-o&lt;/span> wide
NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS VOLUMEATTRIBUTESCLASS AGE VOLUMEMODE
my-pvc Pending standard &amp;lt;&lt;span class="nb">unset&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> 38s Filesystem

&lt;span class="nv">$ &lt;/span>kubectl get pv my-pv &lt;span class="nt">-o&lt;/span> wide
NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS VOLUMEATTRIBUTESCLASS REASON AGE VOLUMEMODE
my-pv 100Mi RWO Retain Available standard &amp;lt;&lt;span class="nb">unset&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> 51s Filesystem

&lt;span class="nv">$ &lt;/span>kubectl get pvc my-pvc &lt;span class="nt">-o&lt;/span> yaml | &lt;span class="nb">tee &lt;/span>pv.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 annotations:
 kubectl.kubernetes.io/last-applied-configuration: |
 &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;v1&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;PersistentVolumeClaim&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;metadata&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;annotations&amp;#34;&lt;/span>:&lt;span class="o">{}&lt;/span>,&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;my-pvc&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;spec&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;accessModes&amp;#34;&lt;/span>:[&lt;span class="s2">&amp;#34;ReadWriteMany&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;resources&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;requests&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;storage&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;150Mi&amp;#34;&lt;/span>&lt;span class="o">}}&lt;/span>,&lt;span class="s2">&amp;#34;storageClassName&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;standard&amp;#34;&lt;/span>&lt;span class="o">}}&lt;/span>
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-20T13:08:41Z&amp;#34;&lt;/span>
 finalizers:
 - kubernetes.io/pvc-protection
 name: my-pvc
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2002&amp;#34;&lt;/span>
 uid: a4c6c044-4118-47a4-97b9-ceb69fac3bc2
spec:
 accessModes:
 - ReadWriteMany
 resources:
 requests:
 storage: 150Mi
 storageClassName: standard
 volumeMode: Filesystem
status:
 phase: Pending

&lt;span class="nv">$ &lt;/span>kubectl get pv my-pv &lt;span class="nt">-o&lt;/span> yaml
apiVersion: v1
kind: PersistentVolume
metadata:
 annotations:
 kubectl.kubernetes.io/last-applied-configuration: |
 &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;v1&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;PersistentVolume&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;metadata&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;annotations&amp;#34;&lt;/span>:&lt;span class="o">{}&lt;/span>,&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;my-pv&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;spec&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;accessModes&amp;#34;&lt;/span>:[&lt;span class="s2">&amp;#34;ReadWriteOnce&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;capacity&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;storage&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;100Mi&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;hostPath&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;path&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;/mnt/data&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;persistentVolumeReclaimPolicy&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Retain&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;storageClassName&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;standard&amp;#34;&lt;/span>&lt;span class="o">}}&lt;/span>
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-20T13:08:41Z&amp;#34;&lt;/span>
 finalizers:
 - kubernetes.io/pv-protection
 name: my-pv
 resourceVersion: &lt;span class="s2">&amp;#34;2003&amp;#34;&lt;/span>
 uid: 85a371c4-0931-4b57-87ea-fc1fceb674c1
spec:
 accessModes:
 - ReadWriteOnce
 capacity:
 storage: 100Mi
 hostPath:
 path: /mnt/data
 &lt;span class="nb">type&lt;/span>: &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
 persistentVolumeReclaimPolicy: Retain
 storageClassName: standard
 volumeMode: Filesystem

&lt;span class="nv">$ &lt;/span>vim pv.yaml
&lt;span class="c"># 两个问题：&lt;/span>
&lt;span class="c"># 1、 PVC 和 PV 的 accessModes 不一致，改为 ReadWriteOnce即可&lt;/span>
&lt;span class="c"># 2、 PVC 的存储是 150Mi，而 PV 只有 100Mi，也改为 100Mi 即可。&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl delete &lt;span class="nt">-f&lt;/span> pv.yaml &lt;span class="nt">--force&lt;/span> &lt;span class="nt">--grace-period&lt;/span> 0
Warning: Immediate deletion does not &lt;span class="nb">wait &lt;/span>&lt;span class="k">for &lt;/span>confirmation that the running resource has been terminated. The resource may &lt;span class="k">continue &lt;/span>to run on the cluster indefinitely.
persistentvolumeclaim &lt;span class="s2">&amp;#34;my-pvc&amp;#34;&lt;/span> force deleted

&lt;span class="nv">$ &lt;/span>kubectl apply &lt;span class="nt">-f&lt;/span> pv.yaml
persistentvolumeclaim/my-pvc created

&lt;span class="nv">$ &lt;/span>kubectl get pvc my-pvc &lt;span class="nt">-o&lt;/span> wide
NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS VOLUMEATTRIBUTESCLASS AGE VOLUMEMODE
my-pvc Bound my-pv 100Mi RWO standard &amp;lt;&lt;span class="nb">unset&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> 10s Filesystem&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>killercoda CKA：Troubleshooting - 1</title><link>https://www.diguage.com/post/killercoda-cka-troubleshooting-1/</link><pubDate>Sun, 22 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-troubleshooting-1/</guid><description>&lt;div class="sect1">
&lt;h2 id="_troubleshooting_pod_issue">1. Troubleshooting - Pod Issue&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/pod-issue" target="_blank" rel="noopener">Troubleshooting - Pod Issue&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>&lt;code>hello-kubernetes&lt;/code> pod not running, fix that issue&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl get pod
NAME READY STATUS RESTARTS AGE
hello-kubernetes 0/1 RunContainerError 2 &lt;span class="o">(&lt;/span>6s ago&lt;span class="o">)&lt;/span> 29s

&lt;span class="nv">$ &lt;/span>kubectl describe pod hello-kubernetes
Name: hello-kubernetes
Namespace: default
Priority: 0
Service Account: default
Node: node01/172.30.2.2
Start Time: Mon, 20 Jan 2025 07:21:57 +0000
Labels: &amp;lt;none&amp;gt;
Annotations: cni.projectcalico.org/containerID: 2e010161283b56bfd70d604c31ece3dc3189882f1e24c2ea57647dbaec3b2bdb
 cni.projectcalico.org/podIP: 192.168.1.4/32
 cni.projectcalico.org/podIPs: 192.168.1.4/32
Status: Running
IP: 192.168.1.4
IPs:
 IP: 192.168.1.4
Containers:
 echo-container:
 Container ID: containerd://4f01851fcb908cd7bd1031a1726b8b75873d69fb246a5eebdd5c3dc003be7c19
 Image: redis
 Image ID: docker.io/library/redis@sha256:ca65ea36ae16e709b0f1c7534bc7e5b5ac2e5bb3c97236e4fec00e3625eb678d
 Port: &amp;lt;none&amp;gt;
 Host Port: &amp;lt;none&amp;gt;
 Command:
 shell
 &lt;span class="nt">-c&lt;/span>
 &lt;span class="k">while &lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do &lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;Hello Kubernetes&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">sleep &lt;/span>5&lt;span class="p">;&lt;/span> &lt;span class="k">done
 &lt;/span>State: Waiting
 Reason: CrashLoopBackOff
 Last State: Terminated
 Reason: StartError
 Message: failed to create containerd task: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: &lt;span class="nb">exec&lt;/span>: &lt;span class="s2">&amp;#34;shell&amp;#34;&lt;/span>: executable file not found &lt;span class="k">in&lt;/span> &lt;span class="nv">$PATH&lt;/span>: unknown
 Exit Code: 128
 Started: Thu, 01 Jan 1970 00:00:00 +0000
 Finished: Mon, 20 Jan 2025 07:22:20 +0000
 Ready: False
 Restart Count: 2
 Environment: &amp;lt;none&amp;gt;
 Mounts:
 /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xk5qj &lt;span class="o">(&lt;/span>ro&lt;span class="o">)&lt;/span>
Conditions:
 Type Status
 PodReadyToStartContainers True
 Initialized True
 Ready False
 ContainersReady False
 PodScheduled True
Volumes:
 kube-api-access-xk5qj:
 Type: Projected &lt;span class="o">(&lt;/span>a volume that contains injected data from multiple sources&lt;span class="o">)&lt;/span>
 TokenExpirationSeconds: 3607
 ConfigMapName: kube-root-ca.crt
 ConfigMapOptional: &amp;lt;nil&amp;gt;
 DownwardAPI: &lt;span class="nb">true
&lt;/span>QoS Class: BestEffort
Node-Selectors: &amp;lt;none&amp;gt;
Tolerations: node.kubernetes.io/not-ready:NoExecute &lt;span class="nv">op&lt;/span>&lt;span class="o">=&lt;/span>Exists &lt;span class="k">for &lt;/span>300s
 node.kubernetes.io/unreachable:NoExecute &lt;span class="nv">op&lt;/span>&lt;span class="o">=&lt;/span>Exists &lt;span class="k">for &lt;/span>300s
Events:
 Type Reason Age From Message
 &lt;span class="nt">----&lt;/span> &lt;span class="nt">------&lt;/span> &lt;span class="nt">----&lt;/span> &lt;span class="nt">----&lt;/span> &lt;span class="nt">-------&lt;/span>
 Normal Scheduled 41s default-scheduler Successfully assigned default/hello-kubernetes to node01
 Normal Pulled 35s kubelet Successfully pulled image &lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span> &lt;span class="k">in &lt;/span>5.57s &lt;span class="o">(&lt;/span>5.57s including waiting&lt;span class="o">)&lt;/span>&lt;span class="nb">.&lt;/span> Image size: 45006722 bytes.
 Normal Pulled 33s kubelet Successfully pulled image &lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span> &lt;span class="k">in &lt;/span>422ms &lt;span class="o">(&lt;/span>422ms including waiting&lt;span class="o">)&lt;/span>&lt;span class="nb">.&lt;/span> Image size: 45006722 bytes.
 Normal Pulling 19s &lt;span class="o">(&lt;/span>x3 over 40s&lt;span class="o">)&lt;/span> kubelet Pulling image &lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span>
 Normal Created 18s &lt;span class="o">(&lt;/span>x3 over 35s&lt;span class="o">)&lt;/span> kubelet Created container echo-container
 Warning Failed 18s &lt;span class="o">(&lt;/span>x3 over 34s&lt;span class="o">)&lt;/span> kubelet Error: failed to create containerd task: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: &lt;span class="nb">exec&lt;/span>: &lt;span class="s2">&amp;#34;shell&amp;#34;&lt;/span>: executable file not found &lt;span class="k">in&lt;/span> &lt;span class="nv">$PATH&lt;/span>: unknown
 Normal Pulled 18s kubelet Successfully pulled image &lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span> &lt;span class="k">in &lt;/span>467ms &lt;span class="o">(&lt;/span>467ms including waiting&lt;span class="o">)&lt;/span>&lt;span class="nb">.&lt;/span> Image size: 45006722 bytes.
 Warning BackOff 6s &lt;span class="o">(&lt;/span>x4 over 32s&lt;span class="o">)&lt;/span> kubelet Back-off restarting failed container echo-container &lt;span class="k">in &lt;/span>pod hello-kubernetes_default&lt;span class="o">(&lt;/span>5a459cd4-866a-4e57-8d44-ae83156e1e0b&lt;span class="o">)&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl get pod hello-kubernetes &lt;span class="nt">-o&lt;/span> yaml | &lt;span class="nb">tee &lt;/span>pod.yaml
apiVersion: v1
kind: Pod
metadata:
 annotations:
 cni.projectcalico.org/containerID: 2e010161283b56bfd70d604c31ece3dc3189882f1e24c2ea57647dbaec3b2bdb
 cni.projectcalico.org/podIP: 192.168.1.4/32
 cni.projectcalico.org/podIPs: 192.168.1.4/32
 kubectl.kubernetes.io/last-applied-configuration: |
 &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;v1&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Pod&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;metadata&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;annotations&amp;#34;&lt;/span>:&lt;span class="o">{}&lt;/span>,&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;hello-kubernetes&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;spec&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;containers&amp;#34;&lt;/span>:[&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;command&amp;#34;&lt;/span>:[&lt;span class="s2">&amp;#34;shell&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;while true; do echo &amp;#39;Hello Kubernetes&amp;#39;; sleep 5; done&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;image&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;echo-container&amp;#34;&lt;/span>&lt;span class="o">}]}}&lt;/span>
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-20T07:21:57Z&amp;#34;&lt;/span>
 name: hello-kubernetes
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2157&amp;#34;&lt;/span>
 uid: 5a459cd4-866a-4e57-8d44-ae83156e1e0b
spec:
 containers:
 - &lt;span class="nb">command&lt;/span>:
 - shell
 - &lt;span class="nt">-c&lt;/span>
 - &lt;span class="k">while &lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do &lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;Hello Kubernetes&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">sleep &lt;/span>5&lt;span class="p">;&lt;/span> &lt;span class="k">done
 &lt;/span>image: redis
 imagePullPolicy: Always
 name: echo-container
 resources: &lt;span class="o">{}&lt;/span>
 terminationMessagePath: /dev/termination-log
 terminationMessagePolicy: File
 volumeMounts:
 - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
 name: kube-api-access-xk5qj
 readOnly: &lt;span class="nb">true
 &lt;/span>dnsPolicy: ClusterFirst
 enableServiceLinks: &lt;span class="nb">true
 &lt;/span>nodeName: node01
 preemptionPolicy: PreemptLowerPriority
 priority: 0
 restartPolicy: Always
 schedulerName: default-scheduler
 securityContext: &lt;span class="o">{}&lt;/span>
 serviceAccount: default
 serviceAccountName: default
 terminationGracePeriodSeconds: 30
 tolerations:
 - effect: NoExecute
 key: node.kubernetes.io/not-ready
 operator: Exists
 tolerationSeconds: 300
 - effect: NoExecute
 key: node.kubernetes.io/unreachable
 operator: Exists
 tolerationSeconds: 300
 volumes:
 - name: kube-api-access-xk5qj
 projected:
 defaultMode: 420
 sources:
 - serviceAccountToken:
 expirationSeconds: 3607
 path: token
 - configMap:
 items:
 - key: ca.crt
 path: ca.crt
 name: kube-root-ca.crt
 - downwardAPI:
 items:
 - fieldRef:
 apiVersion: v1
 fieldPath: metadata.namespace
 path: namespace
&lt;span class="c"># 省略了 status 字段&lt;/span>

&lt;span class="nv">$ &lt;/span>vim pod.yaml
&lt;span class="c"># 根据提示，没有 shell，将 shell 修改为 sh 即可。&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl replace &lt;span class="nt">-f&lt;/span> pod.yaml
Error from server &lt;span class="o">(&lt;/span>Conflict&lt;span class="o">)&lt;/span>: error when replacing &lt;span class="s2">&amp;#34;pod.yaml&amp;#34;&lt;/span>: Operation cannot be fulfilled on pods &lt;span class="s2">&amp;#34;hello-kubernetes&amp;#34;&lt;/span>: the object has been modified&lt;span class="p">;&lt;/span> please apply your changes to the latest version and try again

&lt;span class="c"># 不能替换，就直接删除，再重建&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl delete &lt;span class="nt">-f&lt;/span> pod.yaml &lt;span class="nt">--force&lt;/span> &lt;span class="nt">--grace-period&lt;/span> 0
Warning: Immediate deletion does not &lt;span class="nb">wait &lt;/span>&lt;span class="k">for &lt;/span>confirmation that the running resource has been terminated. The resource may &lt;span class="k">continue &lt;/span>to run on the cluster indefinitely.
pod &lt;span class="s2">&amp;#34;hello-kubernetes&amp;#34;&lt;/span> force deleted

&lt;span class="nv">$ &lt;/span>kubectl apply &lt;span class="nt">-f&lt;/span> pod.yaml
pod/hello-kubernetes created

&lt;span class="nv">$ &lt;/span>kubectl get pod
NAME READY STATUS RESTARTS AGE
hello-kubernetes 1/1 Running 0 5s&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>killercoda CKA：Workloads &amp; Scheduling</title><link>https://www.diguage.com/post/killercoda-cka-workloads-scheduling/</link><pubDate>Fri, 20 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-workloads-scheduling/</guid><description>&lt;div class="sect1">
&lt;h2 id="_workloads_scheduling_pod">1. Workloads &amp;amp; Scheduling - Pod&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/pod" target="_blank" rel="noopener">Workloads &amp;amp; Scheduling - Pod&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>Fresher deployed a pod named &lt;code>my-pod&lt;/code>. However, while specifying the resource limits, they mistakenly given &lt;code>100Mi&lt;/code> storage limit instead of &lt;code>50Mi&lt;/code>&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>node doesn’t have sufficient resources, So change it to &lt;code>50Mi&lt;/code> only.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl get pod my-pod &lt;span class="nt">-o&lt;/span> yaml | &lt;span class="nb">tee &lt;/span>pod.yaml
apiVersion: v1
kind: Pod
metadata:
 annotations:
 cni.projectcalico.org/containerID: 8414bfefda21fa6ca74ef8d499c92a22ae6cc0dbb6d0bc4d82eb0129a795d75d
 cni.projectcalico.org/podIP: 192.168.1.4/32
 cni.projectcalico.org/podIPs: 192.168.1.4/32
 kubectl.kubernetes.io/last-applied-configuration: |
 &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;v1&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Pod&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;metadata&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;annotations&amp;#34;&lt;/span>:&lt;span class="o">{}&lt;/span>,&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;my-pod&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;spec&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;containers&amp;#34;&lt;/span>:[&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;image&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;nginx:latest&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;my-container&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;resources&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;limits&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;memory&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;100Mi&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>,&lt;span class="s2">&amp;#34;requests&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;memory&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;50Mi&amp;#34;&lt;/span>&lt;span class="o">}}}]}}&lt;/span>
 creationTimestamp: &lt;span class="s2">&amp;#34;2025-01-14T07:53:50Z&amp;#34;&lt;/span>
 name: my-pod
 namespace: default
 resourceVersion: &lt;span class="s2">&amp;#34;2026&amp;#34;&lt;/span>
 uid: fcf1e97e-cec0-45b0-b82d-766ad0c51823
spec:
 containers:
 - image: nginx:latest
 imagePullPolicy: Always
 name: my-container
 resources:
 limits:
 memory: 100Mi
 requests:
 memory: 50Mi
 terminationMessagePath: /dev/termination-log
 terminationMessagePolicy: File
 volumeMounts:
 - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
 name: kube-api-access-thchj
 readOnly: &lt;span class="nb">true
 &lt;/span>dnsPolicy: ClusterFirst
 enableServiceLinks: &lt;span class="nb">true
 &lt;/span>nodeName: node01
 preemptionPolicy: PreemptLowerPriority
 priority: 0
 restartPolicy: Always
 schedulerName: default-scheduler
 securityContext: &lt;span class="o">{}&lt;/span>
 serviceAccount: default
 serviceAccountName: default
 terminationGracePeriodSeconds: 30
 tolerations:
 - effect: NoExecute
 key: node.kubernetes.io/not-ready
 operator: Exists
 tolerationSeconds: 300
 - effect: NoExecute
 key: node.kubernetes.io/unreachable
 operator: Exists
 tolerationSeconds: 300
 volumes:
 - name: kube-api-access-thchj
 projected:
 defaultMode: 420
 sources:
 - serviceAccountToken:
 expirationSeconds: 3607
 path: token
 - configMap:
 items:
 - key: ca.crt
 path: ca.crt
 name: kube-root-ca.crt
 - downwardAPI:
 items:
 - fieldRef:
 apiVersion: v1
 fieldPath: metadata.namespace
 path: namespace
&lt;span class="c"># 省略没用的 status 字段&lt;/span>

&lt;span class="nv">$ &lt;/span>vim pod.yaml
&lt;span class="c"># 将 limit 中，100Mi 改为 50Mi&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl delete &lt;span class="nt">-f&lt;/span> pod.yaml &lt;span class="nt">--force&lt;/span> &lt;span class="nt">--grace-period&lt;/span> 0
Warning: Immediate deletion does not &lt;span class="nb">wait &lt;/span>&lt;span class="k">for &lt;/span>confirmation that the running resource has been terminated. The resource may &lt;span class="k">continue &lt;/span>to run on the cluster indefinitely.
pod &lt;span class="s2">&amp;#34;my-pod&amp;#34;&lt;/span> force deleted

&lt;span class="nv">$ &lt;/span>kubectl apply &lt;span class="nt">-f&lt;/span> pod.yaml
pod/my-pod created&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>killercoda CKA：Storage</title><link>https://www.diguage.com/post/killercoda-cka-storage/</link><pubDate>Thu, 19 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-storage/</guid><description>&lt;div class="sect1">
&lt;h2 id="_storage_persistent_volume">1. Storage - Persistent Volume&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/pv" target="_blank" rel="noopener">Storage - Persistent Volume&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>Create a PersistentVolume (PV) named &lt;code>black-pv-cka&lt;/code> with the following specifications:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Volume Type: &lt;code>hostPath&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Path: &lt;code>/opt/black-pv-cka&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Capacity: &lt;code>50Mi&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>vim pv.yaml
&lt;span class="c"># 编写 YAML 文件&lt;/span>

&lt;span class="nv">$ &lt;/span>&lt;span class="nb">cat &lt;/span>pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
 name: black-pv-cka
spec:
 capacity:
 storage: 50Mi
 accessModes:
 - ReadWriteOnce
 persistentVolumeReclaimPolicy: Retain
 hostPath:
 path: /opt/black-pv-cka

&lt;span class="nv">$ &lt;/span>kubectl apply &lt;span class="nt">-f&lt;/span> pv.yaml
persistentvolume/black-pv-cka created&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_storage_persistent_volume_claim">2. Storage - Persistent Volume Claim&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/pvc" target="_blank" rel="noopener">Storage - Persistent Volume Claim&lt;/a>&lt;/p>
&lt;/div></description></item><item><title>killercoda CKA：Services &amp; Networking</title><link>https://www.diguage.com/post/killercoda-cka-services-networking/</link><pubDate>Wed, 18 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-services-networking/</guid><description>&lt;div class="sect1">
&lt;h2 id="_services_networking_services">1. Services &amp;amp; Networking - Services&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/svc" target="_blank" rel="noopener">Services &amp;amp; Networking - Services&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>You have an existing Nginx pod named &lt;code>nginx-pod&lt;/code>. Perform the following steps:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Expose the &lt;code>nginx-pod&lt;/code> internally within the cluster using a Service named &lt;code>nginx-service&lt;/code> .&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use &lt;code>port forwarding&lt;/code> to service to access the Welcome content of &lt;code>nginx-pod&lt;/code> using the &lt;code>curl&lt;/code> command.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl get pod &lt;span class="nt">--show-labels&lt;/span>
NAME READY STATUS RESTARTS AGE LABELS
nginx-pod 1/1 Running 0 8m48s &lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>nginx

&lt;span class="nv">$ &lt;/span>&lt;span class="nb">cat &lt;/span>svc.yaml
apiVersion: v1
kind: Service
metadata:
 name: nginx-service
spec:
 selector:
 app: nginx
 ports:
 - name: http
 protocol: TCP
 port: 80
 targetPort: 80

&lt;span class="nv">$ &lt;/span>kubectl apply &lt;span class="nt">-f&lt;/span> svc.yaml
service/nginx-service created

&lt;span class="nv">$ &lt;/span>kubectl port-forward service/nginx-service 8081:80
Forwarding from 127.0.0.1:8081 -&amp;gt; 80
Forwarding from &lt;span class="o">[&lt;/span>::1]:8081 -&amp;gt; 80
Handling connection &lt;span class="k">for &lt;/span>8081


&lt;span class="c"># 打开另外一个终端&lt;/span>
&lt;span class="nv">$ &lt;/span>curl localhost:8081
&amp;lt;&lt;span class="o">!&lt;/span>DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;&lt;span class="nb">head&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
html &lt;span class="o">{&lt;/span> color-scheme: light dark&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
body &lt;span class="o">{&lt;/span> width: 35em&lt;span class="p">;&lt;/span> margin: 0 auto&lt;span class="p">;&lt;/span>
font-family: Tahoma, Verdana, Arial, sans-serif&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;For online documentation and support please refer to
&amp;lt;a &lt;span class="nv">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;http://nginx.org/&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>nginx.org&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;
Commercial support is available at
&amp;lt;a &lt;span class="nv">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;http://nginx.com/&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>nginx.com&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Thank you &lt;span class="k">for &lt;/span>using nginx.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>killercoda CKA：Architecture, Installation &amp; Maintenance</title><link>https://www.diguage.com/post/killercoda-cka-architecture-installation-maintenance/</link><pubDate>Mon, 16 Dec 2024 19:54:28 +0800</pubDate><guid>https://www.diguage.com/post/killercoda-cka-architecture-installation-maintenance/</guid><description>&lt;div class="sect1">
&lt;h2 id="_architecture_installation_maintenance_create_pod">1. Architecture, Installation &amp;amp; Maintenance - Create Pod&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>&lt;a href="https://killercoda.com/sachin/course/CKA/pod-create" target="_blank" rel="noopener">Architecture, Installation &amp;amp; Maintenance - Create Pod&lt;/a>&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="paragraph">
&lt;p>Create a pod called &lt;code>sleep-pod&lt;/code> using the &lt;code>nginx&lt;/code> image and also &lt;code>sleep&lt;/code> (using &lt;code>command&lt;/code> ) for give any value for seconds.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c"># @author D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>

&lt;span class="nv">$ &lt;/span>&lt;span class="nb">cat &lt;/span>nginx.yaml
apiVersion: v1
kind: Pod
metadata:
 name: sleep-pod
spec:
 containers:
 - name: nginx
 image: nginx
 &lt;span class="nb">command&lt;/span>:
 - &lt;span class="nb">sleep&lt;/span>
 - &lt;span class="s2">&amp;#34;3600&amp;#34;&lt;/span>

&lt;span class="nv">$ &lt;/span>kubectl apply &lt;span class="nt">-f&lt;/span> nginx.yaml
pod/sleep-pod created

&lt;span class="nv">$ &lt;/span>kubectl get pod
NAME READY STATUS RESTARTS AGE
sleep-pod 1/1 Running 0 5s&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>新 Mac 安装软件脚本</title><link>https://www.diguage.com/post/install-software-for-new-mac/</link><pubDate>Tue, 24 Oct 2023 16:39:37 +0800</pubDate><guid>https://www.diguage.com/post/install-software-for-new-mac/</guid><description>&lt;div class="paragraph">
&lt;p>最近公司可以申请零净值 MacBook 笔记本，就随手申请了一个。由于有很多软件需要安装，就搜集了一下以前安装软件的命令，整理成一个安装脚本，分享出来，方便后续再次装机。&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_xcode_select">1. &lt;code>xcode-select&lt;/code>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>作为开发人员，这是基础工具包，必须安装：&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">xcode-select &lt;span class="nt">--install&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_安装脚本">2. 安装脚本&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>安装脚本主要构成如下：&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_oh_my_zsh">2.1. oh my zsh&lt;/h3>
&lt;div class="paragraph">
&lt;p>安装脚本先安装了 oh-my-zsh。最近帮同事搞 MacBook，没有 oh-my-zsh 的加持，写命令行浑身难受。&lt;/p>
&lt;/div>
&lt;div class="imageblock text-center">
&lt;div class="content">
&lt;img src="https://www.diguage.com/images/logos/oh-my-zsh.png" alt="oh-my-zsh" width="95%"/>
&lt;/div>
&lt;div class="title">图 1. oh-my-zsh&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>由于安装 oh my zsh 会导致脚本退出，所以，单独安装：&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight nowrap">&lt;code data-lang="bash">&lt;span class="c">#!/usr/bin/env bash&lt;/span>
&lt;span class="c">#&lt;/span>
&lt;span class="c"># Author: D瓜哥 · &lt;a href="https://www.diguage.com" target="_blank">https://www.diguage.com&lt;/a>&lt;/span>
&lt;span class="c">#&lt;/span>

&lt;span class="c"># 安装 oh-my-zsh&lt;/span>
sh &lt;span class="nt">-c&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">$(&lt;/span>curl &lt;span class="nt">-fsSL&lt;/span> https://cdn.jsdelivr.net/gh/ohmyzsh/ohmyzsh/tools/install.sh&lt;span class="si">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_homebrew">2.2. Homebrew&lt;/h3>
&lt;div class="paragraph">
&lt;p>脚本里面主要使用了 Homebrew 来安装软件。&lt;/p>
&lt;/div>
&lt;div class="imageblock text-center">
&lt;div class="content">
&lt;img src="https://www.diguage.com/images/logos/homebrew.svg" alt="Homebrew" width="50%"/>
&lt;/div>
&lt;div class="title">图 2. Homebrew&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_sdkman">2.3. sdkman&lt;/h3>
&lt;div class="paragraph">
&lt;p>Java JDK + Maven 等相关安装，主要使用了 Sdkman，方便多个版本相互切换。&lt;/p>
&lt;/div>
&lt;div class="imageblock text-center">
&lt;div class="content">
&lt;img src="https://www.diguage.com/images/logos/sdkman.png" alt="sdkman" width="95%"/>
&lt;/div>
&lt;div class="title">图 3. sdkman&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_感谢_jsdelivr">2.4. 感谢 jsDelivr&lt;/h3>
&lt;div class="paragraph">
&lt;p>为了解决安装 oh-my-zsh 和 Homebrew 时，GitHub 访问不畅，使用 jsDelivr 将它们的安装链接进行改写，可以利用 CDN 加速，让安装过程更加顺利。&lt;/p>
&lt;/div></description></item><item><title>AWK 简介</title><link>https://www.diguage.com/post/introducing-awk/</link><pubDate>Sat, 10 Jul 2021 10:14:47 +0800</pubDate><guid>https://www.diguage.com/post/introducing-awk/</guid><description>&lt;div class="paragraph">
&lt;p>这周需要处理一个日志文件，有一次体会到 AWK 强大和方便，但也认识到自己对 AWK 了解的粗浅。所以，写篇文章再深入学习一下。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>根据维基百科显示，AWK 于二十世纪七十年代在 Bell Labs 创建；其名字来源于三位创始人： Alfred Aho、Peter Weinberger and Brian Kernighan。AWK 是一个现在几乎每台 Linux 机器上都会有这个命令。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>AWK 是一种领域专用语言，专用设计用于文本处理，常用于提取文本或者生成报告。 AWK 也像 Shell 一样，方言和实现众多。D瓜哥这里选择最常用的 GNU AWK 实现。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>AWK 是以行为单位来处理文本的。它不仅仅是一个命令行，而且是一门语言。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>先展示一下我们的实例程序：&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">&lt;span class="nv">$ &lt;/span>&lt;span class="nb">cat &lt;/span>employee.txt
ajay manager account 45000
sunil clerk account 25000
varun manager sales 50000
amit manager account 47000
tarun peon sales 15000
deepak clerk sales 23000
sunil peon sales 13000
satvik director purchase 80000&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>AWK 的基本用法如下：&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">&lt;span class="c"># ① 基本格式&lt;/span>
&lt;span class="nv">$ &lt;/span>&lt;span class="nb">awk &lt;/span>动作 文件名

&lt;span class="c"># ② 标准 I/O 格式&lt;/span>
&lt;span class="nv">$ &lt;/span>&lt;span class="nb">cat &lt;/span>文件名 | &lt;span class="nb">awk &lt;/span>动作&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>只要一部计算机，就可以创造出无限的世界</title><link>https://www.diguage.com/post/computer-create-world/</link><pubDate>Tue, 21 Apr 2009 00:00:00 +0800</pubDate><guid>https://www.diguage.com/post/computer-create-world/</guid><description>&lt;div class="paragraph">
&lt;p>曾经写给学弟学妹的一封信。我觉得还行，发出来，希望对刚学计算机专业的朋友有所帮助。当然，如果哪位朋友有更好的想法，也请留言，大家讨论讨论。原文如下：&lt;/p>
&lt;/div>
&lt;div class="sidebarblock">
&lt;div class="content">
&lt;div class="title">致师弟师妹的一封信&lt;/div>
&lt;div class="paragraph">
&lt;p>各位朋友：&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>大家好！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>从本周开始，我必须专心为我的前程奋斗了。很可惜不能和大家一起学习了。这封信就算是我和大家的一个告别吧。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>首先，感谢史老师给我提供这个和大家一起学习和交流的机会，让我和大家一起度过了一段特殊而愉快的时光。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>其次，我应该感谢大家。由于本人水平有限，也许我没能让大家从我这里学到太多知识，但是大家却让我学会了很多东西，锻炼了我很多方面的能力。单凭这一点，我就应该感谢大家。同时，很多人把我当朋友，更使我感激不尽。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>再次，在这短暂而又宝贵的大学时光里，大家走的路应该和我的基本一样。我以一个过来人的身份，和大家分享一下我的学习经验吧，希望可以让大家少走甚至不走弯路。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>先说一点我们所学科目的情况吧。&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Linux：一定要动手敲指令。在我们一年半的学习时光里，我认为Linux是我们所学的所有实践性学科里面最简单的一科了！只要把指令记好用熟就行了！另外，指令不需要背，用多了自然就记住了。（相信95%的同学都知道cd是什么意思吧！为什么呢？因为用它的次数多！）多提一点，一定要多尝试！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java或者C#或者PHP（由于个人比较喜欢Java，所以，一下描述Java的地方，你可以同样换成C#或在PHP等）：这是我们大家必须要下苦功夫学好的课！而且一定一定要学精！它们在我们的课程体系结构中的作用，就像是地基对于这个房子的作用！根基不好，房子很难建高的！即使建好也是豆腐渣工程。毕竟“空中楼阁”只存在于我们的想象中。它们是学习JSP、ASP.NET、J2EE、“游戏开发”、网页开发等等的基础，Java或者C#或者PHP学不会，这些课很难学好！（我这里有Java的教学视频，感兴趣的同学可以来我寝室拷贝。也可以上网下载：http://www.verycd.com/topics/93279/（请下载J2SE的））&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据库：重点是关系模型、 SQL语句以及后面的数据库设计。做动态网站的技术、做桌面程序，甚至做手机应用等，都会用到数据库！以后工作中数据模型设计、数据查询等都要求有比较扎实的数据库基础才行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据结构：我个人认为学习数据结构就是学习一种解决问题的思想。其实，类库已经实现了我们所学的所有的数据结构，到时会用就行了！&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;div class="paragraph">
&lt;p>现在NBA正在进行季后赛，就用乔丹的一句话，作为所有学科的一个共同的建议送给大家：&lt;/p>
&lt;/div>
&lt;div class="quoteblock">
&lt;blockquote>
&lt;div class="paragraph">
&lt;p>I can accept failure, but I can’t accept not trying.&lt;/p>
&lt;/div>
&lt;/blockquote>
&lt;div class="attribution">
— Michael Jordan
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>其实学习就是不断尝试，不断总结，不断进取的一个过程。我可以用我的尝试告你一个正确的结果，但是自己尝试出来的结果印象更加深刻！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>再说一点我的个人的学习感触吧。我个人认为，这些比我们大家在学校学到知识更为重要！知识马上就会过时，但是学习的方法却可以带领我们走的更远。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;strong>一、享受学习。&lt;/strong>如果我们把学习当成像玩游戏、听音乐一样的娱乐活动时，我想这会给我们一种全新的感觉。Study hard，have fun，make history！ By Jeff Bezos &amp;amp; Joy Lee （努力学习，乐在其中，并创造历史！—Jeff Bezos（Amazon.com的创办者兼CEO，Joy Lee就是我。(*&lt;sup>__&lt;/sup>*) 嘻嘻…… 这句话是我从他的一句话里改编过来的！））&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>其实，学计算机学科非常有趣！Linux里面，几行指令，我们就可以顺利的让鼠标在两个操作系统自由转换！Java里面几行，几十行代码就有一个漂亮的窗口！C#里面随便一个拖拽，也是一个不错的窗口！“只要一部计算机，就可以创造出无限的世界。”（出自蔡学镛《写程序，好好玩》，《Java夜未眠》里面的一篇，本书是本很搞笑的编程感触散文集，推荐看看。）加油吧！相信你行！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;strong>二、坚持不懈。&lt;/strong>任何事情都不是可以一蹴而就的，都需要我们坚持！再送给大家一句话：失败只有一种，那就是半途而废！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;strong>三、舍我其谁的豪迈和霸气。&lt;/strong>“Horse’s，Gosling能创造出来Java，我就不信我学不会！一个破Java，我还不放到眼里呢！！”，“别人能创造出来，我就不相信我学不会？！”不过，也要给大家提醒一句：“战略上，藐视敌人；战术上，重视敌人”！一定要下功夫学习才行！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;strong>四、信心。&lt;/strong>一定要相信自己的能力！你是独一无二，无可替代的！信心能让你从一个更高的角度看待你的学习！能给你一种驾驭知识的成就感！这种感觉能让你从学习中找到乐趣！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;strong>五、行动！&lt;/strong>上面的大道理，我们大家都懂！但是，谁实际做到呢？伟大与平凡的区别也许就在于这一点吧。我以我自己的高中、大学对比来看，行动与否结果绝对是不一样的！只想不做，最多是个空想家！所以，大家一定要“坚持不懈的行动”！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>最后，送给大家一句话：&lt;strong>你充满了潜能，但你的努力还远远不够！&lt;/strong>再次怀念我们共同的学习时光！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>祝大家学有所成！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>D瓜哥&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>