<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="946px" preserveAspectRatio="none" style="width:1012px;height:946px;background:#FFFFFF;" version="1.1" viewBox="0 0 1012 946" width="1012px" zoomAndPan="magnify"><defs/><g><rect height="52.3984" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="687" x="155.5" y="5"/><text fill="#000000" font-family="'Source" font-size="36" font-weight="bold" lengthAdjust="spacing" textLength="677" x="160.5" y="44.8047">Hessian AbstractHessianOutput 类图</text><!--MD5=[4dbfc8701120294435d217b47710be74]
class AbstractHessianOutput--><g id="elem_AbstractHessianOutput"><rect codeLine="3" fill="#F1F1F1" height="707.1758" id="AbstractHessianOutput" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="471" x="295.5" y="70.3984"/><ellipse cx="426.5" cy="87.3984" fill="#A9DCDF" rx="12" ry="12" style="stroke:#181818;stroke-width:1.0;"/><path d="M426.4141,82.6494 L425.1924,88.0195 L427.6445,88.0195 Z M424.832,80.2764 L428.0049,80.2764 L431.5469,93.3984 L428.9541,93.3984 L428.1455,90.1553 L424.6738,90.1553 L423.8828,93.3984 L421.29,93.3984 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="200" x="448.5" y="94.2012">AbstractHessianOutput</text><line style="stroke:#181818;stroke-width:0.5;" x1="296.5" x2="765.5" y1="104.3984" y2="104.3984"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="303.5" y="112.3984"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="360" x="316.5" y="125.8008">SerializerFactory _defaultSerializerFactory</text><polygon fill="none" points="306.5,131.5977,310.5,135.5977,306.5,139.5977,302.5,135.5977" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="298" x="316.5" y="147">SerializerFactory _serializerFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="296.5" x2="765.5" y1="154.7969" y2="154.7969"/><ellipse cx="306.5" cy="165.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="430" x="316.5" y="176.1992">void setSerializerFactory(SerializerFactory factory)</text><ellipse cx="306.5" cy="186.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="330" x="316.5" y="197.3984">SerializerFactory getSerializerFactory()</text><polygon fill="#FFFF44" points="306.5,203.1953,310.5,207.1953,306.5,211.1953,302.5,207.1953" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="336" x="316.5" y="218.5977">SerializerFactory findSerializerFactory()</text><ellipse cx="306.5" cy="229.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="364" x="316.5" y="239.7969">boolean setUnshared(boolean isUnshared)</text><ellipse cx="306.5" cy="250.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="285" x="316.5" y="260.9961">void writeBoolean(boolean value)</text><ellipse cx="306.5" cy="271.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="194" x="316.5" y="282.1953">void writeInt(int value)</text><ellipse cx="306.5" cy="292.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="229" x="316.5" y="303.3945">void writeLong(long value)</text><ellipse cx="306.5" cy="314.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="268" x="316.5" y="324.5938">void writeDouble(double value)</text><ellipse cx="306.5" cy="335.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="255" x="316.5" y="345.793">void writeUTCDate(long time)</text><ellipse cx="306.5" cy="356.5898" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="131" x="316.5" y="366.9922">void writeNull()</text><ellipse cx="306.5" cy="377.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="250" x="316.5" y="388.1914">void writeString(String value)</text><ellipse cx="306.5" cy="398.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="444" x="316.5" y="409.3906">void writeString(char []buffer, int offset, int length)</text><ellipse cx="306.5" cy="420.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="250" x="316.5" y="430.5898">void writeBytes(byte []buffer)</text><ellipse cx="306.5" cy="441.3867" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="438" x="316.5" y="451.7891">void writeBytes(byte []buffer, int offset, int length)</text><polygon fill="#FFFF44" points="306.5,457.5859,310.5,461.5859,306.5,465.5859,302.5,461.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="199" x="316.5" y="472.9883">void writeRef(int value)</text><ellipse cx="306.5" cy="483.7852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="268" x="316.5" y="494.1875">boolean removeRef(Object obj)</text><ellipse cx="306.5" cy="504.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="431" x="316.5" y="515.3867">boolean replaceRef(Object oldRef, Object newRef)</text><ellipse cx="306.5" cy="526.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="262" x="316.5" y="536.5859">boolean addRef(Object object)</text><ellipse cx="306.5" cy="547.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="186" x="316.5" y="557.7852">int getRef(Object obj)</text><ellipse cx="306.5" cy="568.582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="268" x="316.5" y="578.9844">void writeObject(Object object)</text><ellipse cx="306.5" cy="589.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="398" x="316.5" y="600.1836">boolean writeListBegin(int length, String type)</text><ellipse cx="306.5" cy="610.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="160" x="316.5" y="621.3828">void writeListEnd()</text><ellipse cx="306.5" cy="632.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="275" x="316.5" y="642.582">void writeMapBegin(String type)</text><ellipse cx="306.5" cy="653.3789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="166" x="316.5" y="663.7813">void writeMapEnd()</text><ellipse cx="306.5" cy="674.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="281" x="316.5" y="684.9805">int writeObjectBegin(String type)</text><ellipse cx="306.5" cy="695.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="185" x="316.5" y="706.1797">void writeObjectEnd()</text><ellipse cx="306.5" cy="716.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="298" x="316.5" y="727.3789">void writeClassFieldLength(int len)</text><ellipse cx="306.5" cy="738.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="97" x="316.5" y="748.5781">void flush()</text><ellipse cx="306.5" cy="759.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="98" x="316.5" y="769.7773">void close()</text></g><path d="M6,392.8984 L6,445.2969 A0,0 0 0 0 6,445.2969 L260,445.2969 A0,0 0 0 0 260,445.2969 L260,423.0977 L299.5,678.1777 L260,415.0977 L260,402.8984 L250,392.8984 L6,392.8984 A0,0 0 0 0 6,392.8984 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M250,392.8984 L250,402.8984 L260,402.8984 L250,392.8984 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="'Source" font-size="18" lengthAdjust="spacing" textLength="90" x="12" y="415.3008">直接调用的</text><text fill="#000000" font-family="'Source" font-size="18" lengthAdjust="spacing" textLength="233" x="12" y="436.5">writeMapBegin(String type)</text><!--MD5=[68bb742850fcb46871020f6743175e45]
class HessianOutput--><g id="elem_HessianOutput"><rect codeLine="42" fill="#F1F1F1" height="50" id="HessianOutput" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="450" y="847.8984"/><ellipse cx="466" cy="864.8984" fill="#ADD1B2" rx="12" ry="12" style="stroke:#181818;stroke-width:1.0;"/><path d="M468.501,871.0205 Q467.8857,871.3369 467.209,871.4951 Q466.5322,871.6533 465.7852,871.6533 Q463.1309,871.6533 461.7334,869.9043 Q460.3359,868.1553 460.3359,864.8506 Q460.3359,861.5371 461.7334,859.7881 Q463.1309,858.0391 465.7852,858.0391 Q466.5322,858.0391 467.2178,858.1973 Q467.9033,858.3555 468.501,858.6719 L468.501,861.5547 Q467.833,860.9395 467.2046,860.6538 Q466.5762,860.3682 465.9082,860.3682 Q464.4844,860.3682 463.7593,861.4976 Q463.0342,862.627 463.0342,864.8506 Q463.0342,867.0654 463.7593,868.1948 Q464.4844,869.3242 465.9082,869.3242 Q466.5762,869.3242 467.2046,869.0386 Q467.833,868.7529 468.501,868.1377 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="128" x="481" y="871.7012">HessianOutput</text><line style="stroke:#181818;stroke-width:0.5;" x1="451" x2="611" y1="881.8984" y2="881.8984"/><line style="stroke:#181818;stroke-width:0.5;" x1="451" x2="611" y1="889.8984" y2="889.8984"/></g><!--MD5=[38f80e5fbd3f81f352db392a0c46c8a8]
class Hessian2Output--><g id="elem_Hessian2Output"><rect codeLine="44" fill="#F1F1F1" height="71.1992" id="Hessian2Output" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="697" y="837.3984"/><ellipse cx="777" cy="854.3984" fill="#ADD1B2" rx="12" ry="12" style="stroke:#181818;stroke-width:1.0;"/><path d="M779.501,860.5205 Q778.8857,860.8369 778.209,860.9951 Q777.5322,861.1533 776.7852,861.1533 Q774.1309,861.1533 772.7334,859.4043 Q771.3359,857.6553 771.3359,854.3506 Q771.3359,851.0371 772.7334,849.2881 Q774.1309,847.5391 776.7852,847.5391 Q777.5322,847.5391 778.2178,847.6973 Q778.9033,847.8555 779.501,848.1719 L779.501,851.0547 Q778.833,850.4395 778.2046,850.1538 Q777.5762,849.8682 776.9082,849.8682 Q775.4844,849.8682 774.7593,850.9976 Q774.0342,852.127 774.0342,854.3506 Q774.0342,856.5654 774.7593,857.6948 Q775.4844,858.8242 776.9082,858.8242 Q777.5762,858.8242 778.2046,858.5386 Q778.833,858.2529 779.501,857.6377 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="139" x="799" y="861.2012">Hessian2Output</text><line style="stroke:#181818;stroke-width:0.5;" x1="698" x2="1004" y1="871.3984" y2="871.3984"/><line style="stroke:#181818;stroke-width:0.5;" x1="698" x2="1004" y1="879.3984" y2="879.3984"/><ellipse cx="708" cy="890.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="281" x="718" y="900.8008">int writeObjectBegin(String type)</text></g><!--MD5=[74c36771e2d1d14c81d6e5c916f77cda]
class Hessian2Constants--><g id="elem_Hessian2Constants"><rect fill="#F1F1F1" height="50" id="Hessian2Constants" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="801.5" y="398.8984"/><ellipse cx="817.5" cy="415.8984" fill="#B4A7E5" rx="12" ry="12" style="stroke:#181818;stroke-width:1.0;"/><path d="M813.5117,411.8115 L813.5117,409.5264 L821.3252,409.5264 L821.3252,411.8115 L818.7148,411.8115 L818.7148,420.3633 L821.3252,420.3633 L821.3252,422.6484 L813.5117,422.6484 L813.5117,420.3633 L816.1221,420.3633 L816.1221,411.8115 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="18" font-style="italic" lengthAdjust="spacing" textLength="165" x="832.5" y="422.7012">Hessian2Constants</text><line style="stroke:#181818;stroke-width:0.5;" x1="802.5" x2="999.5" y1="432.8984" y2="432.8984"/><line style="stroke:#181818;stroke-width:0.5;" x1="802.5" x2="999.5" y1="440.8984" y2="440.8984"/></g><!--MD5=[27735977d49d3046db80b30f5b54702f]
reverse link AbstractHessianOutput to HessianOutput--><g id="link_AbstractHessianOutput_HessianOutput"><path d="M531,797.7884 C531,817.8984 531,835.0284 531,847.7384 " fill="none" id="AbstractHessianOutput-backto-HessianOutput" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="524,797.6484,531,777.6484,538,797.6484,524,797.6484" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b60593531d8ba26640c5d20b59d4e447]
reverse link AbstractHessianOutput to Hessian2Output--><g id="link_AbstractHessianOutput_Hessian2Output"><path d="M778.2,770.1984 C797.05,796.5384 813.58,819.6284 826.1,837.1184 " fill="none" id="AbstractHessianOutput-backto-Hessian2Output" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="772.46,774.2084,766.51,753.8684,783.84,766.0584,772.46,774.2084" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ac2e81f68f0e8090007493256e23bb7c]
reverse link Hessian2Constants to Hessian2Output--><g id="link_Hessian2Constants_Hessian2Output"><path d="M896.06,469.0284 C886.11,557.9784 863.84,757.1384 854.86,837.3984 " fill="none" id="Hessian2Constants-backto-Hessian2Output" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="889.13,468.0284,898.31,448.9284,903.05,469.5884,889.13,468.0284" style="stroke:#181818;stroke-width:1.0;"/></g><rect height="23.5547" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="381" x="308.5" y="914.5977"/><text fill="#888888" font-family="'Source" font-size="20" lengthAdjust="spacing" textLength="381" x="308.5" y="933.9336">D瓜哥 · https://www.diguage.com · 出品</text><!--MD5=[897b4337da75665ae853f75d94ed9637]
@startuml
skinparamlocked defaultFontSize 18
skinparamlocked titleFontSize 36
skinparamlocked footerFontSize 20
skinparamlocked titleFontName 'Source
skinparamlocked noteFontName 'Source
skinparamlocked footerFontName 'Source
title **Hessian AbstractHessianOutput 类图**

abstract class AbstractHessianOutput {
  -SerializerFactory _defaultSerializerFactory
  #SerializerFactory _serializerFactory
  
  +void setSerializerFactory(SerializerFactory factory)
  +SerializerFactory getSerializerFactory()
  #SerializerFactory findSerializerFactory()
  +boolean setUnshared(boolean isUnshared)
  +{abstract} void writeBoolean(boolean value)
  +{abstract} void writeInt(int value)
  +{abstract} void writeLong(long value)
  +{abstract} void writeDouble(double value)
  +{abstract} void writeUTCDate(long time)
  +{abstract} void writeNull()
  +{abstract} void writeString(String value)
  +{abstract} void writeString(char []buffer, int offset, int length)
  +{abstract} void writeBytes(byte []buffer)
  +{abstract} void writeBytes(byte []buffer, int offset, int length)
  #{abstract} void writeRef(int value)
  +boolean removeRef(Object obj)
  +{abstract} boolean replaceRef(Object oldRef, Object newRef)
  +{abstract} boolean addRef(Object object)
  +{abstract} int getRef(Object obj)
  +{abstract} void writeObject(Object object)
  +{abstract} boolean writeListBegin(int length, String type)
  +{abstract} void writeListEnd()
  +{abstract} void writeMapBegin(String type)
  +{abstract} void writeMapEnd()
  +int writeObjectBegin(String type)
  +void writeObjectEnd()
  +void writeClassFieldLength(int len)
  +void flush()
  +void close()
}
note left of AbstractHessianOutput::writeObjectBegin
  直接调用的
  writeMapBegin(String type)
end note

class HessianOutput extends AbstractHessianOutput

class Hessian2Output extends AbstractHessianOutput implements Hessian2Constants {
  +int writeObjectBegin(String type)
}

footer D瓜哥 · https://www.diguage.com · 出品
@enduml

PlantUML version 1.2022.6(Wed Jun 22 01:34:49 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: CN
--></g></svg>