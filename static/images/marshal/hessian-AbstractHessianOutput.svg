<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="784px" preserveAspectRatio="none" style="width:811px;height:784px;background:#FFFFFF;" version="1.1" viewBox="0 0 811 784" width="811px" zoomAndPan="magnify"><defs/><g><rect height="45.332" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="576" x="110.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="30" font-weight="bold" lengthAdjust="spacing" textLength="566" x="115.5" y="39.0039">Hessian AbstractHessianOutput 类图</text><!--MD5=[4dbfc8701120294435d217b47710be74]
class AbstractHessianOutput--><g id="elem_AbstractHessianOutput"><rect codeLine="4" fill="#F1F1F1" height="559.1367" id="AbstractHessianOutput" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="373" x="229.5" y="63.332"/><ellipse cx="332.75" cy="79.332" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M332.6133,74.6802 L331.4595,79.752 L333.7754,79.752 Z M331.1191,72.439 L334.1157,72.439 L337.4609,84.832 L335.0122,84.832 L334.2485,81.769 L330.9697,81.769 L330.2227,84.832 L327.7739,84.832 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="158" x="353.25" y="84.623">AbstractHessianOutput</text><line style="stroke:#181818;stroke-width:0.5;" x1="230.5" x2="601.5" y1="95.332" y2="95.332"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="237.5" y="103.332"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="249.5" y="112.8672">SerializerFactory _defaultSerializerFactory</text><polygon fill="none" points="240.5,117.8203,244.5,121.8203,240.5,125.8203,236.5,121.8203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="249.5" y="129.3555">SerializerFactory _serializerFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="230.5" x2="601.5" y1="136.3086" y2="136.3086"/><ellipse cx="240.5" cy="147.3086" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="342" x="249.5" y="153.8438">void setSerializerFactory(SerializerFactory factory)</text><ellipse cx="240.5" cy="163.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="249.5" y="170.332">SerializerFactory getSerializerFactory()</text><polygon fill="#FFFF44" points="240.5,175.2852,244.5,179.2852,240.5,183.2852,236.5,179.2852" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="249.5" y="186.8203">SerializerFactory findSerializerFactory()</text><ellipse cx="240.5" cy="196.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="249.5" y="203.3086">boolean setUnshared(boolean isUnshared)</text><ellipse cx="240.5" cy="213.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="228" x="249.5" y="219.7969">void writeBoolean(boolean value)</text><ellipse cx="240.5" cy="229.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="153" x="249.5" y="236.2852">void writeInt(int value)</text><ellipse cx="240.5" cy="246.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="182" x="249.5" y="252.7734">void writeLong(long value)</text><ellipse cx="240.5" cy="262.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="214" x="249.5" y="269.2617">void writeDouble(double value)</text><ellipse cx="240.5" cy="279.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="202" x="249.5" y="285.75">void writeUTCDate(long time)</text><ellipse cx="240.5" cy="295.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="104" x="249.5" y="302.2383">void writeNull()</text><ellipse cx="240.5" cy="312.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="199" x="249.5" y="318.7266">void writeString(String value)</text><ellipse cx="240.5" cy="328.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="347" x="249.5" y="335.2148">void writeString(char []buffer, int offset, int length)</text><ellipse cx="240.5" cy="345.168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="197" x="249.5" y="351.7031">void writeBytes(byte []buffer)</text><ellipse cx="240.5" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="340" x="249.5" y="368.1914">void writeBytes(byte []buffer, int offset, int length)</text><polygon fill="#FFFF44" points="240.5,373.1445,244.5,377.1445,240.5,381.1445,236.5,377.1445" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="157" x="249.5" y="384.6797">void writeRef(int value)</text><ellipse cx="240.5" cy="394.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="249.5" y="401.168">boolean removeRef(Object obj)</text><ellipse cx="240.5" cy="411.1211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="340" x="249.5" y="417.6563">boolean replaceRef(Object oldRef, Object newRef)</text><ellipse cx="240.5" cy="427.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="208" x="249.5" y="434.1445">boolean addRef(Object object)</text><ellipse cx="240.5" cy="444.0977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="146" x="249.5" y="450.6328">int getRef(Object obj)</text><ellipse cx="240.5" cy="460.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="211" x="249.5" y="467.1211">void writeObject(Object object)</text><ellipse cx="240.5" cy="477.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="313" x="249.5" y="483.6094">boolean writeListBegin(int length, String type)</text><ellipse cx="240.5" cy="493.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="126" x="249.5" y="500.0977">void writeListEnd()</text><ellipse cx="240.5" cy="510.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="218" x="249.5" y="516.5859">void writeMapBegin(String type)</text><ellipse cx="240.5" cy="526.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="132" x="249.5" y="533.0742">void writeMapEnd()</text><ellipse cx="240.5" cy="543.0273" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="249.5" y="549.5625">int writeObjectBegin(String type)</text><ellipse cx="240.5" cy="559.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="249.5" y="566.0508">void writeObjectEnd()</text><ellipse cx="240.5" cy="576.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="249.5" y="582.5391">void writeClassFieldLength(int len)</text><ellipse cx="240.5" cy="592.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="249.5" y="599.0273">void flush()</text><ellipse cx="240.5" cy="608.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="249.5" y="615.5156">void close()</text></g><path d="M6,317.332 L6,357.9531 A0,0 0 0 0 6,357.9531 L194,357.9531 A0,0 0 0 0 194,357.9531 L194,341.6426 L233.5,544.2715 L194,333.6426 L194,327.332 L184,317.332 L6,317.332 A0,0 0 0 0 6,317.332 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M184,317.332 L184,327.332 L194,327.332 L184,317.332 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="12" y="334.9004">直接调用的</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="167" x="12" y="350.2109">writeMapBegin(String type)</text><!--MD5=[68bb742850fcb46871020f6743175e45]
class HessianOutput--><g id="elem_HessianOutput"><rect codeLine="43" fill="#F1F1F1" height="48" id="HessianOutput" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="349.5" y="690.332"/><ellipse cx="364.5" cy="706.332" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M366.9731,712.4751 Q366.3921,712.7739 365.7529,712.9233 Q365.1138,713.0728 364.4082,713.0728 Q361.9014,713.0728 360.5815,711.4209 Q359.2617,709.769 359.2617,706.6479 Q359.2617,703.5186 360.5815,701.8667 Q361.9014,700.2148 364.4082,700.2148 Q365.1138,700.2148 365.7612,700.3643 Q366.4087,700.5137 366.9731,700.8125 L366.9731,703.5352 Q366.3423,702.9541 365.7488,702.6843 Q365.1553,702.4146 364.5244,702.4146 Q363.1797,702.4146 362.4949,703.4812 Q361.8101,704.5479 361.8101,706.6479 Q361.8101,708.7397 362.4949,709.8064 Q363.1797,710.873 364.5244,710.873 Q365.1553,710.873 365.7488,710.6033 Q366.3423,710.3335 366.9731,709.7524 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="378.5" y="711.623">HessianOutput</text><line style="stroke:#181818;stroke-width:0.5;" x1="350.5" x2="481.5" y1="722.332" y2="722.332"/><line style="stroke:#181818;stroke-width:0.5;" x1="350.5" x2="481.5" y1="730.332" y2="730.332"/></g><!--MD5=[38f80e5fbd3f81f352db392a0c46c8a8]
class Hessian2Output--><g id="elem_Hessian2Output"><rect codeLine="45" fill="#F1F1F1" height="64.4883" id="Hessian2Output" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="248" x="556" y="682.332"/><ellipse cx="620.75" cy="698.332" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M623.2231,704.4751 Q622.6421,704.7739 622.0029,704.9233 Q621.3638,705.0728 620.6582,705.0728 Q618.1514,705.0728 616.8315,703.4209 Q615.5117,701.769 615.5117,698.6479 Q615.5117,695.5186 616.8315,693.8667 Q618.1514,692.2148 620.6582,692.2148 Q621.3638,692.2148 622.0112,692.3643 Q622.6587,692.5137 623.2231,692.8125 L623.2231,695.5352 Q622.5923,694.9541 621.9988,694.6843 Q621.4053,694.4146 620.7744,694.4146 Q619.4297,694.4146 618.7449,695.4812 Q618.0601,696.5479 618.0601,698.6479 Q618.0601,700.7397 618.7449,701.8064 Q619.4297,702.873 620.7744,702.873 Q621.4053,702.873 621.9988,702.6033 Q622.5923,702.3335 623.2231,701.7524 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="641.25" y="703.623">Hessian2Output</text><line style="stroke:#181818;stroke-width:0.5;" x1="557" x2="803" y1="714.332" y2="714.332"/><line style="stroke:#181818;stroke-width:0.5;" x1="557" x2="803" y1="722.332" y2="722.332"/><ellipse cx="567" cy="733.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="576" y="739.8672">int writeObjectBegin(String type)</text></g><!--MD5=[74c36771e2d1d14c81d6e5c916f77cda]
class Hessian2Constants--><g id="elem_Hessian2Constants"><rect fill="#F1F1F1" height="48" id="Hessian2Constants" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="637.5" y="318.832"/><ellipse cx="652.5" cy="334.832" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M648.9277,331.0972 L648.9277,328.939 L656.3071,328.939 L656.3071,331.0972 L653.8418,331.0972 L653.8418,339.1738 L656.3071,339.1738 L656.3071,341.332 L648.9277,341.332 L648.9277,339.1738 L651.3931,339.1738 L651.3931,331.0972 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="666.5" y="340.123">Hessian2Constants</text><line style="stroke:#181818;stroke-width:0.5;" x1="638.5" x2="799.5" y1="350.832" y2="350.832"/><line style="stroke:#181818;stroke-width:0.5;" x1="638.5" x2="799.5" y1="358.832" y2="358.832"/></g><!--MD5=[27735977d49d3046db80b30f5b54702f]
reverse link AbstractHessianOutput to HessianOutput--><g id="link_AbstractHessianOutput_HessianOutput"><path d="M416,642.662 C416,661.612 416,677.922 416,690.092 " fill="none" id="AbstractHessianOutput-backto-HessianOutput" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="409,642.472,416,622.472,423,642.472,409,642.472" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b60593531d8ba26640c5d20b59d4e447]
reverse link AbstractHessianOutput to Hessian2Output--><g id="link_AbstractHessianOutput_Hessian2Output"><path d="M614.3,621.372 C631.26,645.112 646.24,666.082 657.61,681.992 " fill="none" id="AbstractHessianOutput-backto-Hessian2Output" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="608.51,625.312,602.58,604.962,619.9,617.172,608.51,625.312" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ac2e81f68f0e8090007493256e23bb7c]
reverse link Hessian2Constants to Hessian2Output--><g id="link_Hessian2Constants_Hessian2Output"><path d="M714.42,387.262 C706.45,462.702 690.25,616.202 683.29,682.122 " fill="none" id="Hessian2Constants-backto-Hessian2Output" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="707.5,386.102,716.56,366.942,721.42,387.572,707.5,386.102" style="stroke:#181818;stroke-width:1.0;"/></g><rect height="23.5547" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="381" x="208" y="752.8203"/><text fill="#888888" font-family="sans-serif" font-size="20" lengthAdjust="spacing" textLength="381" x="208" y="772.1563">D瓜哥 · https://www.diguage.com · 出品</text><!--MD5=[96da78ea352f21e989ecea9258b9dd13]
@startuml
skinparam titleFontSize 30
title **Hessian AbstractHessianOutput 类图**

abstract class AbstractHessianOutput {
  -SerializerFactory _defaultSerializerFactory
  #SerializerFactory _serializerFactory
  
  +void setSerializerFactory(SerializerFactory factory)
  +SerializerFactory getSerializerFactory()
  #SerializerFactory findSerializerFactory()
  +boolean setUnshared(boolean isUnshared)
  +{abstract} void writeBoolean(boolean value)
  +{abstract} void writeInt(int value)
  +{abstract} void writeLong(long value)
  +{abstract} void writeDouble(double value)
  +{abstract} void writeUTCDate(long time)
  +{abstract} void writeNull()
  +{abstract} void writeString(String value)
  +{abstract} void writeString(char []buffer, int offset, int length)
  +{abstract} void writeBytes(byte []buffer)
  +{abstract} void writeBytes(byte []buffer, int offset, int length)
  #{abstract} void writeRef(int value)
  +boolean removeRef(Object obj)
  +{abstract} boolean replaceRef(Object oldRef, Object newRef)
  +{abstract} boolean addRef(Object object)
  +{abstract} int getRef(Object obj)
  +{abstract} void writeObject(Object object)
  +{abstract} boolean writeListBegin(int length, String type)
  +{abstract} void writeListEnd()
  +{abstract} void writeMapBegin(String type)
  +{abstract} void writeMapEnd()
  +int writeObjectBegin(String type)
  +void writeObjectEnd()
  +void writeClassFieldLength(int len)
  +void flush()
  +void close()
}
note left of AbstractHessianOutput::writeObjectBegin
  直接调用的
  writeMapBegin(String type)
end note

class HessianOutput extends AbstractHessianOutput

class Hessian2Output extends AbstractHessianOutput implements Hessian2Constants {
  +int writeObjectBegin(String type)
}

skinparam footerFontSize 20
footer D瓜哥 · https://www.diguage.com · 出品
@enduml

PlantUML version 1.2022.5(Sat Apr 30 18:55:52 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: CN
--></g></svg>